<!DOCTYPE html>
<html dir="ltr" lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <title>The Box of No Return</title>
    <link type="text/css" href="styles.css" rel="stylesheet">
  </head>
  <body>
    <h1 style="font-size: 2.1em; margin-bottom: 0.5em;">The Box of No Return</h1>
    <h2>summary</h2>
    <p>The Box of No Return is a Linux-based musical synthesizer platform,
      suitable for live musicianship, designed to handle multiple patches with
      enormous demands, and switch between them with zero delay and zero
      cutout.&nbsp; If you sit in your home studio and use single SoundFonts
      with a laptop and simple GUI, you don't need this.&nbsp; If you play live,
      and pile on the tone generators and filters in patch development in order
      to feel and deliver the unyielding power of the musical harmonic roar, a
      full implementation of the BNR may suit you well.&nbsp; There are
      obviously middle grounds too â˜º, and there are articles here to help in
      general.</p>
    <h2>questions, contributions, discussion, the code</h2>
    <p>The project and its code are <a href="https://github.com/ponderworthy/the-box-of-no-return"
        target="_blank">hosted on Github</a>.&nbsp; There are SF2 SoundFonts
      involved in the current build which are downloadable <a href="https://archive.org/details/SonatinaSymphonicOrchestraSF2"
        target="_blank">here</a>; these are conversions of the Sonatina
      Symphonic Orchestra, original SFZs being <a href="http://sso.mattiaswestlund.net/download.html"
        target="_blank">here</a>. </p>
    <h2>more articles</h2>
    <p>are right <a href="articles.html">here</a>.&nbsp; There is also a new
      Facebook group <a href="https://www.facebook.com/groups/1518955771533144/">over
        here</a>.</p>
    <h2>why this project and its benefits</h2>
    <p>From the beginning, the BNR was built out of a need to host patches of
      maximum, profound and terrible, tonal content. If you find yourself
      reducing the profundity of your patches because your machine won't do
      better, this project may be very good for you, especially if you play
      live. Current patches include one with three simultaneous <a href="http://yoshimi.github.io/"
        title="http://yoshimi.github.io/">Yoshimi</a>s, another with several
      simultaneous large <a href="http://www.fluidsynth.org/">FluidSynth</a>
      soundfonts, and the ability to mix the two and a third together.&nbsp;</p>
    <p>Surprisingly enough, the current BNR is quite a lot more stable than its
      predecessors.&nbsp; If one of its soft servers gets overloaded (say, due
      to its musician having a really good day), it cuts out without static or
      other noise, and recovers, and comes back just as quietly.&nbsp; Obviously
      we engineer against such events, but it is wonderful to have the setup so
      much more forgiving.<br>
      <br>
      The current known box running with this code, is an eight-core 4GHz
      machine with 8G RAM. In an earlier iteration, it used the conventional
      single <a href="http://www.jackaudio.org/">JACK</a> server; but less than
      one-quarter of its CPU capacity was being used, while JACK reported that
      75% of its capacity was being used. In 2015 began an effort, now
      successful, to use multiple JACK processes together in one box, and this
      is the rebuild of the BNR with <a href="https://github.com/ponderworthy/MultiJACK">MultiJACK</a>
      at its core. Attempts have not yet been made to run this code on a
      quad-core box, though the previous single-JACK iteration of the BNR is
      still running as of this writing on quad 3GHz with 8G RAM.<br>
      <br>
      There are quite a few people using tools like NetJACK to increase JACK
      capacity with multiple boxes, or at least multiple motherboards. But if
      you value portability, if you value space, and/or if you are a gigging
      musician, a fragile or heavy (one, the other, or both; not neither)
      multi-motherboard construct is not preferable. Most users of
      Linux-hardware synths limit themselves as a result of what one JACK server
      can do, and other platforms limit analogously; here we have an effort to
      blow the door open just a bit more.</p>
    <p>Many prayers granted, enormous help from the Linux Audio community, and
      much study, work, and trial and error, has gone into making this happen
      reliably and well.&nbsp; My gratitude to all!</p>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-76358613-4"></script>
    <script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-76358613-4');
</script> </body>
</html>
