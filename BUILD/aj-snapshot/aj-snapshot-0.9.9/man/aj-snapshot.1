.\" Process this file with
.\" groff -man -Tascii aj-snapshot.1
.\"
.TH AJ-SNAPSHOT 1 "NOVEMBER 2011" Linux "User Manuals"
.SH NAME
aj-snapshot \- store and restore snapshots of JACK and/or ALSA connections
.SH SYNOPSIS
.B aj-snapshot \fR[ \fB-adfjqrx\fR ] [ \fB-p \fIpolling_interval\fR ] [ \fB-i \fIclient_name\fR ]... [ \fIFILE\fR ]
.SH DESCRIPTION
Aj-snapshot is a small program that can be used to make snapshots of the connections made between JACK and/or ALSA clients. Because JACK can provide both audio and MIDI support to programs, aj-snapshot can store both types of connections for JACK. ALSA, on the other hand, only provides routing facilities for MIDI clients. If you call aj-snapshot without any options, aj-snapshot will store all current ALSA \fBand\fR JACK connections to \fIFILE\fR. The file will be an XML file, and you can use a text-editor if you want to edit it manually.
.SH OPTIONS
.PP
\fB-a \fR, \fB--alsa\fR
.IP ""
Only store or restore ALSA midi connections. Also works in daemon mode.
.PP
\fB-d \fR, \fB--daemon\fR
.IP ""
Run aj-snapshot in daemon mode. Aj-snapshot will first try to restore the connections from the specified snapshot file. After this, it will wait for new ports to be registered with ALSA or JACK. Every second by default, aj-snapshot will check if new ports were registered in ALSA or JACK. When this is the case, it will try to restore the connections from your snapshot file. If you start aj-snapshot in daemon mode, you don't need to specify the \fB-r\fR,\fB--restore\fR flag as it is implied anyway. 
.IP ""
If you send the HUP signal to the daemon, the daemon will reload the snapshot file. This gives you the possibility to trigger a connections restore. For an example on how to do this, see the EXAMPLES section below. When you combine the daemon mode with the \fB-x\fR,\fB--remove\fR option, sending the HUP signal to the daemon will clear all connections before restoring.
.IP ""
When the JACK server is stopped (or crashes) while aj-snapshot runs in daemon mode, aj-snapshot will try to keep running. When the JACK server is started again later, aj-snapshot will reattach automatically and restore your connections when needed.
.PP
\fB-f \fR, \fB--force\fR
.IP ""
When you try to save a snapshot over an existing file, aj-snapshot will ask you if you want to overwrite that file. With this option, you can force aj-snapshot to overwrite that file.
.PP
\fB-j \fR, \fB--jack\fR
.IP ""
Only store or restore JACK audio and midi connections. Also works in daemon mode.
.PP
\fB-p \fIinterval\fR, \fB--poll=\fIinterval
.IP ""
Whenever a program registers a port with ALSA or JACK, aj-snapshot will see if there are connections in the snapshot file that should be restored. By default, aj-snapshot will check (poll) if there are new ports every second (1000 milliseconds). With this option you can choose how often aj-snapshot should check for new ports. The value of \fIinterval\fR should be specified in milliseconds.
.PP
\fB-q \fR, \fB--quiet\fR
.IP ""
Don't print any information about the connections that are stored or restored.
.PP
\fB-r \fR, \fB--restore\fR
.IP ""
When you specify the \fB-r\fR flag, aj-snapshot will try to restore all ALSA and JACK connections from \fIFILE\fR. (without it, aj-snapshot will try to \fBstore\fR connections to \fIFILE\fR). You can combine this option with the \fB-a\fR or \fB-j\fR options, if you want to restore ALSA or JACK connections only.
.PP
\fB-x \fR, \fB--remove\fR
.IP ""
The \fB-x\fR option can be used when restoring connections, or when running in daemon mode. With this option, aj-snapshot will remove all existing connections before restoring the snapshot file. When you combine it with the \fB-a\fR or \fB-j\fR option, only the connections for the specific subsystem (ALSA or JACK) will be removed. Without the \fB-x\fR option, aj-snapshot will try to restore connections on top of the connections that are already active.
.IP ""
There is one more way in which you can use the \fB-x\fR option. If you call aj-snapshot without the \fIFILE\fR argument, you can use the \fB-x\fR option to remove all existing ALSA and JACK connections (without doing anything else). As before you can combine it with the \fB-a\fR or \fB-j\fR options.
.PP
\fB-i \fIclient_name\fR, \fB--ignore=\fIclient_name
.IP ""
You can use this option to specify one or more clients that should be ignored by aj-snapshot. You can write the name of the client after the -i option, and you may use wildcard patterns in that string (regular shell globbing). If that name contains spaces, or other characters that have special meaning to the shell, you should put the name between single (safest) or double quotes. To know the name of a client, you could save a snapshot and look up the name in the snapshot file. If you want to ignore multiple clients, you have to repeat the \fB-i\fR option with different client names (the maximum is 50 clients).
.PP
\fB-h \fR, \fB--help\fB
.IP ""
Print a short help message
.SH EXAMPLES
.PP
.B aj-snapshot test.snap
.IP ""
Stores a snapshot of all current ALSA and JACK connections to a file called "test.snap". If that file already exists, aj-snapshot will ask you if you want to overwrite that file.
.PP
.B aj-snapshot -r test.snap
.IP ""
Restores all ALSA and JACK connections from the file "test.snap". This will leave any other active connections intact.
.PP
.B aj-snapshot -xr test.snap
.IP ""
Restore all ALSA and JACK connections from the file "test.snap", but remove all existing connections first.
.PP
.B aj-snapshot -a test.snap
.IP ""
Store all current ALSA connections to "test.snap".
.PP
.B aj-snapshot -rj test.snap
.IP ""
Restore all JACK connections from "test.snap". This means that ALSA connections that might be stored in the file won't be restored.
.PP
.B aj-snapshot -qfj test.snap
.IP ""
Store all current JACK connections to "test.snap". Don't print any info on standard out (be quiet), and forcibly overwrite "test.snap" if it already exists.
.PP
.B aj-snapshot -ax
.IP ""
Remove all ALSA connections
.PP
.B aj-snapshot -d test.snap &
.IP ""
Run aj-snapshot in daemon mode and make it a background process (&). Whenever a new ALSA or JACK client registers a port, connections from test.snap will be restored.
.PP
.B aj-snapshot -djx test.snap &
.IP ""
Run aj-snapshot in daemon mode for the JACK connections in "test.snap". Remove all existing JACK connections whenever the connections from test.snap are restored.
.PP
1)
.B aj-snapshot -d test.snap &
.br
2)
.B aj-snapshot -f test.snap
.br
3)
.B kill -HUP $(pidof aj-snapshot)
.IP ""
1) First start up aj-snapshot in daemon mode with the file "test.snap". 
.br
2) After some connection changes, a second instance of aj-snapshot (which is not run in daemon mode) overwrites that file with the new connections state. 
.br
3) Send the HANGUP signal to the daemon to make it reload the file with the new connections state (see 'man kill', and 'man pidof').
.SH AUTHOR
Written by Lieven Moors and Jari Suominen
.SH REPORTING BUGS
To report aj-snapshot bugs, or if you have feature requests:
.br
.UR http://sourceforge.net/projects/aj-snapshot/
.UE
.PP
Aj-snapshot home page:
.br
.UR http://aj-snapshot.sourceforge.net/
.UE
.PP
Clone the git repository:
.br
git clone
.UR git clone https://lievenmoors@git.code.sf.net/p/aj-snapshot/code
.UE
.SH COPYRIGHT
Copyright \(co 2009-2012 Lieven Moors and Jari Suominen.
.br
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
