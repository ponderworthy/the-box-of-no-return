.TH MIDIDINGS "1" "November 2010"
.SH NAME
mididings \- MIDI router and processor
.SH SYNOPSIS
.B mididings
[\fIoptions\fR] \fI"patch"\fR
.PP
.B mididings
[\fIoptions\fR] \fB\-f\fR filename
.SH DESCRIPTION
.B mididings
is a MIDI router and processor based on Python, supporting ALSA and JACK MIDI.
.PP
Many features are provided:
.TP
.B MIDI routing and filtering
Filter events depending on their event type, channel,
note number, velocity, etc., and freely route them
between an arbitrary number of input and output ports.
.TP
.B Modifying and converting MIDI events
Transpose notes, apply velocity curves, change
controller values and ranges, or convert events to any
other MIDI event type. mididings also includes more
complex functions like a diatonic harmonizer, floating
split points, latched notes, and more.
.TP
.B Seamless switching between patches
Set up different "scenes", each with its own MIDI
routing and processing, and switch between them at any
time, even while playing. Switching scenes does not
affect notes already held, and does not result in
dropouts or stuck notes!
.TP
.B MIDI event monitoring, running external commands
Print MIDI event data to the console to help debugging
your patches and configuring your MIDI controllers. In
addition to its MIDI output, mididings can also
execute shell commands and send OSC or DBUS messages.
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-b\fR BACKEND
name of backend to use
.TP
\fB\-c\fR CLIENT_NAME
ALSA or JACK client name
.TP
\fB\-i\fR IN_PORTS
number of input ports
.TP
\fB\-o\fR OUT_PORTS
number of output ports
.TP
\fB\-d\fR START_DELAY
delay (in seconds) before starting MIDI processing
.TP
\fB\-f\fR FILENAME
filename of script to run
.PP
.SH "SEE ALSO"
\fBlivedings\fR(1)
.SH "AUTHOR"
mididings was written by Dominic Sacr√© <dominic.sacre@gmx.de>.
.PP
This manual page was written by Alessio Treglia <alessio@debian.org>,
for the Debian project (and may be used by others).
