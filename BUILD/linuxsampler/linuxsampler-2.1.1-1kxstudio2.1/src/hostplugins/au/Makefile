# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/hostplugins/au/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/linuxsampler
pkgincludedir = $(includedir)/linuxsampler
pkglibdir = $(libdir)/linuxsampler
pkglibexecdir = $(libexecdir)/linuxsampler
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#noinst_PROGRAMS = LinuxSamplerAU$(EXEEXT)
subdir = src/hostplugins/au
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/pthread.m4 \
	$(top_srcdir)/m4/pragma_diagnostics.m4 \
	$(top_srcdir)/m4/nptl_bug.m4 $(top_srcdir)/m4/arts.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__LinuxSamplerAU_SOURCES_DIST = PluginAU.cpp PluginAU.h \
	PluginAUVersion.h ausdk.cpp
#am_LinuxSamplerAU_OBJECTS =  \
#	LinuxSamplerAU-PluginAU.$(OBJEXT) \
#	LinuxSamplerAU-ausdk.$(OBJEXT)
LinuxSamplerAU_OBJECTS = $(am_LinuxSamplerAU_OBJECTS)
#LinuxSamplerAU_DEPENDENCIES =  \
#	$(top_builddir)/src/liblinuxsampler.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
LinuxSamplerAU_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(LinuxSamplerAU_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/LinuxSamplerAU-PluginAU.Po \
	./$(DEPDIR)/LinuxSamplerAU-ausdk.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(LinuxSamplerAU_SOURCES)
DIST_SOURCES = $(am__LinuxSamplerAU_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
ARTS_CFLAGS = 
ARTS_CONFIG = 
ARTS_LIBS = 
AS = as
ASIOSDK_BASEDIR = 
AUTOCONF = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/missing autoconf
AUTOHEADER = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/missing autoheader
AUTOMAKE = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -ffast-math -fPIC -DPIC -fdata-sections -ffunction-sections -DNDEBUG -Wno-deprecated -mtune=generic -msse -msse2 -mfpmath=sse -march=native -mtune=native -O3 -pthread
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -ffast-math -fPIC -DPIC -fdata-sections -ffunction-sections -DNDEBUG -Wno-deprecated -mtune=generic -msse -msse2 -mfpmath=sse -march=native -mtune=native -O3 -fvisibility-inlines-hidden -pthread
CXX_CPU_SWITCH = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEVELOPER_EXTRAS_DIR = 
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GIG_CFLAGS = -I/opt/kxstudio/include/libgig
GIG_LIBS = -L/opt/kxstudio/lib/libgig -lgig -luuid
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JACK_CFLAGS = 
JACK_LIBS = -ljack
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--gc-sections -Wl,--strip-all
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXT = .so
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LV2_CFLAGS = 
LV2_LIBS = 
MAC_PLUGIN_INSTALL_DIR = /Library/Audio/Plug-Ins
MAKEINFO = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = linuxsampler
PACKAGE_BUGREPORT = 
PACKAGE_NAME = linuxsampler
PACKAGE_STRING = linuxsampler 2.1.1
PACKAGE_TARNAME = linuxsampler
PACKAGE_URL = 
PACKAGE_VERSION = 2.1.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /opt/kxstudio/lib/pkgconfig
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHARED_VERSION_INFO = 5:0:0
SHELL = /bin/bash
SHLIB_VERSION_ARG = 
SNDFILE_CFLAGS = -I/opt/kxstudio/include
SNDFILE_LIBS = -L/opt/kxstudio/lib -lsndfile -lFLAC -lvorbisenc -lvorbis -logg -lm
SQLITE3_CFLAGS = 
SQLITE3_LIBS = 
STRIP = strip
VERSION = 2.1.1
VSTSDK_DIR = 
YACC = bison -y
YFLAGS = 
abs_builddir = /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/src/hostplugins/au
abs_srcdir = /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/src/hostplugins/au
abs_top_builddir = /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1
abs_top_srcdir = /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
config_asiosdk_dir = .
config_default_instruments_db_file = /var/lib/linuxsampler/instruments.db
config_plugin_dir = /opt/linuxsampler/lib/plugins
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jeb/BNR/BUILD/linuxsampler/linuxsampler-2.1.1-1kxstudio2.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/linuxsampler
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
#plugindir = $(libdir)/au
#examples_dir = $(DEVELOPER_EXTRAS_DIR)
#au_public_dir = $(examples_dir)/CoreAudio/AudioUnits/AUPublic
#ca_public_dir = $(examples_dir)/CoreAudio/PublicUtility
#LinuxSamplerAU_CPPFLAGS = -I$(au_public_dir)/AUBase \
#	-I$(au_public_dir)/OtherBases \
#	-I$(au_public_dir)/Utility -I$(ca_public_dir) \
#	$(GIG_CFLAGS) $(SQLITE3_CFLAGS) \
#	$(SNDFILE_CFLAGS) $(debug_messages)

# Uncomment for debug messages.
#debug_messages = -DAU_DEBUG_DISPATCHER=1
#LinuxSamplerAU_SOURCES = PluginAU.cpp PluginAU.h PluginAUVersion.h ausdk.cpp
#LinuxSamplerAU_LDADD = $(top_builddir)/src/liblinuxsampler.la
#AUFLAGS = $(GIG_LIBS) $(JACK_LIBS) $(SQLITE3_LIBS) $(SNDFILE_LIBS)
#LinuxSamplerAU_LDFLAGS = -bundle $(AUFLAGS) \
#    -exported_symbols_list $(srcdir)/PluginAU.exp \
#    -framework CoreServices -framework CoreMIDI -framework CoreAudio \
#    -framework CoreFoundation -framework AudioToolbox -framework AudioUnit

#COMPONENT_DIR = LinuxSamplerAU.component
EXTRA_DIST = PluginAU.exp PluginAU.r PkgInfo Info.plist
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/hostplugins/au/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/hostplugins/au/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

LinuxSamplerAU$(EXEEXT): $(LinuxSamplerAU_OBJECTS) $(LinuxSamplerAU_DEPENDENCIES) $(EXTRA_LinuxSamplerAU_DEPENDENCIES) 
	@rm -f LinuxSamplerAU$(EXEEXT)
	$(AM_V_CXXLD)$(LinuxSamplerAU_LINK) $(LinuxSamplerAU_OBJECTS) $(LinuxSamplerAU_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/LinuxSamplerAU-PluginAU.Po # am--include-marker
include ./$(DEPDIR)/LinuxSamplerAU-ausdk.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

LinuxSamplerAU-PluginAU.o: PluginAU.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxSamplerAU-PluginAU.o -MD -MP -MF $(DEPDIR)/LinuxSamplerAU-PluginAU.Tpo -c -o LinuxSamplerAU-PluginAU.o `test -f 'PluginAU.cpp' || echo '$(srcdir)/'`PluginAU.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinuxSamplerAU-PluginAU.Tpo $(DEPDIR)/LinuxSamplerAU-PluginAU.Po
#	$(AM_V_CXX)source='PluginAU.cpp' object='LinuxSamplerAU-PluginAU.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxSamplerAU-PluginAU.o `test -f 'PluginAU.cpp' || echo '$(srcdir)/'`PluginAU.cpp

LinuxSamplerAU-PluginAU.obj: PluginAU.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxSamplerAU-PluginAU.obj -MD -MP -MF $(DEPDIR)/LinuxSamplerAU-PluginAU.Tpo -c -o LinuxSamplerAU-PluginAU.obj `if test -f 'PluginAU.cpp'; then $(CYGPATH_W) 'PluginAU.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginAU.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinuxSamplerAU-PluginAU.Tpo $(DEPDIR)/LinuxSamplerAU-PluginAU.Po
#	$(AM_V_CXX)source='PluginAU.cpp' object='LinuxSamplerAU-PluginAU.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxSamplerAU-PluginAU.obj `if test -f 'PluginAU.cpp'; then $(CYGPATH_W) 'PluginAU.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginAU.cpp'; fi`

LinuxSamplerAU-ausdk.o: ausdk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxSamplerAU-ausdk.o -MD -MP -MF $(DEPDIR)/LinuxSamplerAU-ausdk.Tpo -c -o LinuxSamplerAU-ausdk.o `test -f 'ausdk.cpp' || echo '$(srcdir)/'`ausdk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinuxSamplerAU-ausdk.Tpo $(DEPDIR)/LinuxSamplerAU-ausdk.Po
#	$(AM_V_CXX)source='ausdk.cpp' object='LinuxSamplerAU-ausdk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxSamplerAU-ausdk.o `test -f 'ausdk.cpp' || echo '$(srcdir)/'`ausdk.cpp

LinuxSamplerAU-ausdk.obj: ausdk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxSamplerAU-ausdk.obj -MD -MP -MF $(DEPDIR)/LinuxSamplerAU-ausdk.Tpo -c -o LinuxSamplerAU-ausdk.obj `if test -f 'ausdk.cpp'; then $(CYGPATH_W) 'ausdk.cpp'; else $(CYGPATH_W) '$(srcdir)/ausdk.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinuxSamplerAU-ausdk.Tpo $(DEPDIR)/LinuxSamplerAU-ausdk.Po
#	$(AM_V_CXX)source='ausdk.cpp' object='LinuxSamplerAU-ausdk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(LinuxSamplerAU_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxSamplerAU-ausdk.obj `if test -f 'ausdk.cpp'; then $(CYGPATH_W) 'ausdk.cpp'; else $(CYGPATH_W) '$(srcdir)/ausdk.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-local:
all-am: Makefile $(PROGRAMS) all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-local:
install-exec-hook:
uninstall-hook:
clean: clean-am

clean-am: clean-generic clean-libtool clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/LinuxSamplerAU-PluginAU.Po
	-rm -f ./$(DEPDIR)/LinuxSamplerAU-ausdk.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/LinuxSamplerAU-PluginAU.Po
	-rm -f ./$(DEPDIR)/LinuxSamplerAU-ausdk.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles check \
	check-am clean clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-hook

.PRECIOUS: Makefile


#all-local: $(COMPONENT_DIR)

#LinuxSamplerAU.rsrc: $(srcdir)/PluginAU.r $(srcdir)/PluginAUVersion.h
#	Rez $(srcdir)/PluginAU.r -d SystemSevenOrLater=1 -useDF -script Roman -d ppc_YES -d i386_YES -d x86_64_YES \
#	    -I /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Versions/Current/Headers \
#	    -I $(au_public_dir)/AUBase/ -arch i386 -arch x86_64 -arch ppc -o LinuxSamplerAU.rsrc

#$(COMPONENT_DIR): $(srcdir)/PkgInfo $(srcdir)/Info.plist LinuxSamplerAU LinuxSamplerAU.rsrc
#	mkdir -p "$(COMPONENT_DIR)/Contents/Frameworks"
#	mkdir -p "$(COMPONENT_DIR)/Contents/MacOS"
#	mkdir -p "$(COMPONENT_DIR)/Contents/Resources"

#	cp $(srcdir)/PkgInfo "$(COMPONENT_DIR)/Contents"
#	cp $(srcdir)/Info.plist "$(COMPONENT_DIR)/Contents"
#	$(LIBTOOL) --mode=install cp LinuxSamplerAU "$(PWD)/$(COMPONENT_DIR)/Contents/MacOS"
#	cp LinuxSamplerAU.rsrc "$(COMPONENT_DIR)/Contents/Resources"
#	@touch $@

#	    cp "`pkg-config --variable=libdir gig`/libgig.6.dylib" "$(COMPONENT_DIR)/Contents/Frameworks/"; \
#	    install_name_tool -id @executable_path/../Frameworks/libgig.6.dylib \
#	        "$(COMPONENT_DIR)/Contents/Frameworks/libgig.6.dylib"; \
#	    install_name_tool -change "`pkg-config --variable=libdir gig`/libgig.6.dylib" \
#	        @executable_path/../Frameworks/libgig.6.dylib \
#	        "$(COMPONENT_DIR)/Contents/MacOS/LinuxSamplerAU"
#
#if HAVE_SQLITE3
#	    cp "`pkg-config --variable=libdir sqlite3`/libsqlite3.dylib" "$(COMPONENT_DIR)/Contents/Frameworks/"; \
#	    install_name_tool -id @executable_path/../Frameworks/libsqlite3.dylib \; \
#	        "$(COMPONENT_DIR)/Contents/Frameworks/libsqlite3.dylib"; \
#	    install_name_tool -change "`pkg-config --variable=libdir sqlite3`/libsqlite3.dylib" \
#	        @executable_path/../Frameworks/libsqlite3.dylib \
#	        "$(COMPONENT_DIR)/Contents/MacOS/LinuxSamplerAU"
#endif
#
#if HAVE_JACK
#	    cp "`pkg-config --variable=libdir jack`/libjack.dylib" "$(COMPONENT_DIR)/Contents/Frameworks/"; \
#	    install_name_tool -id @executable_path/../Frameworks/libjack.dylib \
#	        "$(COMPONENT_DIR)/Contents/Frameworks/libjack.dylib"; \
#	    install_name_tool -change "`pkg-config --variable=libdir jack`/libjack.dylib" \
#	        @executable_path/../Frameworks/libjack.dylib \
#	        "$(COMPONENT_DIR)/Contents/MacOS/LinuxSamplerAU"
#endif

#clean-local:
#	rm -f LinuxSamplerAU.rsrc
#	rm -rf $(COMPONENT_DIR)

#install-exec-hook:
#	if mkdir -p $(MAC_PLUGIN_INSTALL_DIR)/Components && \
#	test -w $(MAC_PLUGIN_INSTALL_DIR)/Components ; then \
#	cp -r $(COMPONENT_DIR) $(MAC_PLUGIN_INSTALL_DIR)/Components/ ; \
#	if test -n "$(INSTALL_STRIP_FLAG)" ; then $(STRIP) -x $(MAC_PLUGIN_INSTALL_DIR)/Components/$(COMPONENT_DIR)/Contents/MacOS/LinuxSamplerAU ; fi ; fi

#uninstall-hook:
#	rm -rf $(MAC_PLUGIN_INSTALL_DIR)/Components/$(COMPONENT_DIR)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
